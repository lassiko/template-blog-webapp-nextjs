# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'

- task: DownloadSecureFile@1
  inputs:
    secureFile: '.env'

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Agent.TempDirectory)
    Contents: '.env'
    TargetFolder: $(Build.Repository.LocalPath)

- script: |
    npm install
    npm run build

- script: |
    if [ -d ".yarn/cache/" ]; then
      echo ".yarn/cache checked in for 'Zero Installs', pushing cache and not running install.."  
    elif [ ! -d ".yarn/cache/" ]; then
      echo ".yarn/cache not found, configuring yarn.."
      echo "Setting yarn version to stable.."
      yarn set version stable
      echo "Checking yarn version.."
      yarn -v
      echo "Running yarn install.."
      yarn install 
    fi
  displayName: 'Check for .yarn cache or install packages'
  
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '.'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'VSE sandbox (Lassi)(8da7374e-5ee9-44a5-accd-51bc36a44ce9)'
    appType: 'webAppLinux'
    WebAppName: 'lassicf1'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'
    RuntimeStack: 'NODE|18-lts'